<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.xblog.mapper.BlogMapper">
  <resultMap id="BaseResultMap" type="com.example.xblog.domain.Blog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="descr" jdbcType="VARCHAR" property="descr" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="read_count" jdbcType="INTEGER" property="readCount" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.xblog.domain.Blog">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, descr, cover, tags, user_id, `date`, read_count, category_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.example.xblog.domain.BlogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.example.xblog.domain.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.xblog.domain.BlogExample">
    delete from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.xblog.domain.Blog">
    insert into blog (id, title, descr, 
      cover, tags, user_id, 
      `date`, read_count, category_id, 
      content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{descr,jdbcType=VARCHAR}, 
      #{cover,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{date,jdbcType=VARCHAR}, #{readCount,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xblog.domain.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="descr != null">
        descr,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="date != null">
        `date`,
      </if>
      <if test="readCount != null">
        read_count,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="descr != null">
        #{descr,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="readCount != null">
        #{readCount,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.xblog.domain.BlogExample" resultType="java.lang.Long">
    select count(*) from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.title != null">
        title = #{row.title,jdbcType=VARCHAR},
      </if>
      <if test="row.descr != null">
        descr = #{row.descr,jdbcType=VARCHAR},
      </if>
      <if test="row.cover != null">
        cover = #{row.cover,jdbcType=VARCHAR},
      </if>
      <if test="row.tags != null">
        tags = #{row.tags,jdbcType=VARCHAR},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=INTEGER},
      </if>
      <if test="row.date != null">
        `date` = #{row.date,jdbcType=VARCHAR},
      </if>
      <if test="row.readCount != null">
        read_count = #{row.readCount,jdbcType=INTEGER},
      </if>
      <if test="row.categoryId != null">
        category_id = #{row.categoryId,jdbcType=INTEGER},
      </if>
      <if test="row.content != null">
        content = #{row.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update blog
    set id = #{row.id,jdbcType=INTEGER},
      title = #{row.title,jdbcType=VARCHAR},
      descr = #{row.descr,jdbcType=VARCHAR},
      cover = #{row.cover,jdbcType=VARCHAR},
      tags = #{row.tags,jdbcType=VARCHAR},
      user_id = #{row.userId,jdbcType=INTEGER},
      `date` = #{row.date,jdbcType=VARCHAR},
      read_count = #{row.readCount,jdbcType=INTEGER},
      category_id = #{row.categoryId,jdbcType=INTEGER},
      content = #{row.content,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog
    set id = #{row.id,jdbcType=INTEGER},
      title = #{row.title,jdbcType=VARCHAR},
      descr = #{row.descr,jdbcType=VARCHAR},
      cover = #{row.cover,jdbcType=VARCHAR},
      tags = #{row.tags,jdbcType=VARCHAR},
      user_id = #{row.userId,jdbcType=INTEGER},
      `date` = #{row.date,jdbcType=VARCHAR},
      read_count = #{row.readCount,jdbcType=INTEGER},
      category_id = #{row.categoryId,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xblog.domain.Blog">
    update blog
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="descr != null">
        descr = #{descr,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        `date` = #{date,jdbcType=VARCHAR},
      </if>
      <if test="readCount != null">
        read_count = #{readCount,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.xblog.domain.Blog">
    update blog
    set title = #{title,jdbcType=VARCHAR},
      descr = #{descr,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      `date` = #{date,jdbcType=VARCHAR},
      read_count = #{readCount,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xblog.domain.Blog">
    update blog
    set title = #{title,jdbcType=VARCHAR},
      descr = #{descr,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      `date` = #{date,jdbcType=VARCHAR},
      read_count = #{readCount,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>